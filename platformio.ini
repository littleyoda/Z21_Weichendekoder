;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; platformio >= 4 wird benÃ¶tigt

[platformio]
src_dir = decoder

;default_envs = d1_mini
;env_default = esp32dev
;env_default = d1_mini
;env_default = mhetesp32minikit
;env_default = esp32full
;env_default = d1_mini_pro
;env_default = esp8285
;env_default = nodemcuv2

[base]
check_tool = cppcheck, clangtidy

data_dir = data
framework = arduino
lib_deps =
    # Adafruit MCP23017 Arduino Library@1.0.3
    https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library#1.0.3
    ArduinoJson@6.10.1
    ivanseidel/LinkedList
    https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library#1.0.4
    # Adafruit PWM Servo Driver Library@1.0.4
    Adafruit SSD1306 Wemos Mini OLED
    https://github.com/adafruit/Adafruit-GFX-Library#1.5.7
    # Adafruit GFX Library@1.5.7
    LiquidCrystal
    https://github.com/littleyoda/LCDIC2
    https://github.com/PetrOsipov/ArduinoPortExtender.git
    # https://github.com/greiman/SSD1306Ascii
    
upload_port = /dev/ttyUSB*
#upload_speed = 921600
upload_speed = 460800
upload_protocol = esptool
upload_resetmethod = nodemcu

monitor_port = /dev/ttyUSB0
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[baseESP8266]
extends = base
; see https://github.com/platformio/platform-espressif8266/releases
; espressif8266@2.4.0 =>  Arduino Framework 2.6.3
; espressif8266@2.6.2 => Arduino Framwork 2.7.4
platform = espressif8266@^2
board_build.mcu = esp8266
board_build.f_cpu = 80000000L
board_build.flash_mode = dout
monitor_filters = esp8266_exception_decoder


[baseESP32]
extends = base
platform = espressif32@3.1
lib_deps =
    ${base.lib_deps}
    https://github.com/jkb-git/ESP32Servo.git
    https://github.com/vanvuongngo/ESP32_AnalogWrite
build_flags = -DCORE_DEBUG_LEVEL=0
monitor_filters = esp32_exception_decoder

[env:d1_mini]
extends = baseESP8266
board = d1_mini
build_flags =
    -DARDUINO_ESP8266_WEMOS_D1MINI
check_tool = cppcheck
check_flags = --enable=all --suppress=noCopyConstructor,noOperatorEq
check_skip_packages = yes

[env:d1_mini_pro]
extends = baseESP8266
board = d1_mini_pro
build_flags =
    -DARDUINO_ESP8266_WEMOS_D1MINI


[env:nodemcu]
extends = baseESP8266
board = nodemcu
build_flags =
    -DARDUINO_ESP8266_NODEMCU

[env:nodemcuv2]
extends = baseESP8266
board = nodemcuv2
build_flags =
    -DARDUINO_ESP8266_NODEMCU

[env:esp8285]
extends = baseESP8266
board = esp8285
build_flags =
    -DARDUINO_ESP8266_ESP01

[env:esp8285min]
extends = baseESP8266
board = esp8285
build_flags =
    -DARDUINO_ESP8266_ESP01
    -DFLASH1MB
board_build.ldscript = eagle.flash.1m64.ld
src_filter = src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<src> -<Display*> -<LocDataControll*> -<CmdReceiverRocnetOverMQTT*> -<PubSubClient*> -<CmdReceiverDCC*>

[env:esp32dev]
extends = baseESP32
board = esp32dev
build_flags =
    -DESP32


[env:mhetesp32minikit]
extends = baseESP32
board = mhetesp32minikit
build_flags =
    -DESP32



[env:esp32full]
extends = baseESP32
board = mhetesp32minikit
board_build.partitions = less_spiffs.csv
build_flags =
    -DLY_FEATURE_AUDIO
    -DESP32

lib_deps =
    ${baseESP32.lib_deps}
    earlephilhower/ESP8266Audio
    https://github.com/Gianbacchio/ESP8266_Spiram#master



[env:esp32lego]
extends = baseESP32
board = esp32dev
board_build.partitions = huge_app.csv
build_flags =
    -DLY_FEATURE_LEGO
    -DESP32

lib_deps =
    ${baseESP32.lib_deps}
    h2zero/NimBLE-Arduino 
    corneliusmunz/legoino 
